{"ast":null,"code":"import { createElementVNode as _createElementVNode, resolveComponent as _resolveComponent, createVNode as _createVNode, withCtx as _withCtx, withKeys as _withKeys, createTextVNode as _createTextVNode, openBlock as _openBlock, createElementBlock as _createElementBlock } from \"vue\";\nconst _hoisted_1 = {\n  class: \"login-container\"\n};\nexport function render(_ctx, _cache, $props, $setup, $data, $options) {\n  const _component_el_input = _resolveComponent(\"el-input\");\n  const _component_el_form_item = _resolveComponent(\"el-form-item\");\n  const _component_el_button = _resolveComponent(\"el-button\");\n  const _component_el_form = _resolveComponent(\"el-form\");\n  const _component_el_card = _resolveComponent(\"el-card\");\n  return _openBlock(), _createElementBlock(\"div\", _hoisted_1, [_createVNode(_component_el_card, {\n    class: \"login-card\"\n  }, {\n    header: _withCtx(() => _cache[2] || (_cache[2] = [_createElementVNode(\"div\", {\n      class: \"card-header\"\n    }, [_createElementVNode(\"h2\", null, \"舆情分析系统\")], -1 /* HOISTED */)])),\n    default: _withCtx(() => [_createVNode(_component_el_form, {\n      ref: \"loginFormRef\",\n      model: $setup.loginForm,\n      rules: $setup.loginRules,\n      \"label-width\": \"0\",\n      class: \"login-form\"\n    }, {\n      default: _withCtx(() => [_createVNode(_component_el_form_item, {\n        prop: \"username\"\n      }, {\n        default: _withCtx(() => [_createVNode(_component_el_input, {\n          modelValue: $setup.loginForm.username,\n          \"onUpdate:modelValue\": _cache[0] || (_cache[0] = $event => $setup.loginForm.username = $event),\n          placeholder: \"用户名\",\n          \"prefix-icon\": \"User\"\n        }, null, 8 /* PROPS */, [\"modelValue\"])]),\n        _: 1 /* STABLE */\n      }), _createVNode(_component_el_form_item, {\n        prop: \"password\"\n      }, {\n        default: _withCtx(() => [_createVNode(_component_el_input, {\n          modelValue: $setup.loginForm.password,\n          \"onUpdate:modelValue\": _cache[1] || (_cache[1] = $event => $setup.loginForm.password = $event),\n          type: \"password\",\n          placeholder: \"密码\",\n          \"prefix-icon\": \"Lock\",\n          \"show-password\": \"\",\n          onKeyup: _withKeys($setup.handleLogin, [\"enter\"])\n        }, null, 8 /* PROPS */, [\"modelValue\"])]),\n        _: 1 /* STABLE */\n      }), _createVNode(_component_el_form_item, null, {\n        default: _withCtx(() => [_createVNode(_component_el_button, {\n          loading: $setup.loading,\n          type: \"primary\",\n          class: \"login-button\",\n          onClick: $setup.handleLogin\n        }, {\n          default: _withCtx(() => _cache[3] || (_cache[3] = [_createTextVNode(\" 登录 \")])),\n          _: 1 /* STABLE */,\n          __: [3]\n        }, 8 /* PROPS */, [\"loading\"])]),\n        _: 1 /* STABLE */\n      })]),\n      _: 1 /* STABLE */\n    }, 8 /* PROPS */, [\"model\"])]),\n    _: 1 /* STABLE */\n  })]);\n}","map":{"version":3,"names":["class","_createElementBlock","_hoisted_1","_createVNode","_component_el_card","header","_withCtx","_cache","_createElementVNode","default","_component_el_form","ref","model","$setup","loginForm","rules","loginRules","_component_el_form_item","prop","_component_el_input","modelValue","username","$event","placeholder","_","password","type","onKeyup","_withKeys","handleLogin","_component_el_button","loading","onClick","_createTextVNode","__"],"sources":["D:\\a课程\\软件工程\\OpinionAnalysis\\src\\views\\Login.vue"],"sourcesContent":["<template>\r\n  <div class=\"login-container\">\r\n    <el-card class=\"login-card\">\r\n      <template #header>\r\n        <div class=\"card-header\">\r\n          <h2>舆情分析系统</h2>\r\n        </div>\r\n      </template>\r\n      \r\n      <el-form\r\n        ref=\"loginFormRef\"\r\n        :model=\"loginForm\"\r\n        :rules=\"loginRules\"\r\n        label-width=\"0\"\r\n        class=\"login-form\"\r\n      >\r\n        <el-form-item prop=\"username\">\r\n          <el-input\r\n            v-model=\"loginForm.username\"\r\n            placeholder=\"用户名\"\r\n            prefix-icon=\"User\"\r\n          />\r\n        </el-form-item>\r\n        \r\n        <el-form-item prop=\"password\">\r\n          <el-input\r\n            v-model=\"loginForm.password\"\r\n            type=\"password\"\r\n            placeholder=\"密码\"\r\n            prefix-icon=\"Lock\"\r\n            show-password\r\n            @keyup.enter=\"handleLogin\"\r\n          />\r\n        </el-form-item>\r\n        \r\n        <el-form-item>\r\n          <el-button\r\n            :loading=\"loading\"\r\n            type=\"primary\"\r\n            class=\"login-button\"\r\n            @click=\"handleLogin\"\r\n          >\r\n            登录\r\n          </el-button>\r\n        </el-form-item>\r\n      </el-form>\r\n    </el-card>\r\n  </div>\r\n</template>\r\n\r\n<script setup>\r\nimport { ref, reactive } from 'vue'\r\nimport { useRouter } from 'vue-router'\r\nimport { useStore } from 'vuex'\r\nimport { ElMessage } from 'element-plus'\r\n\r\nconst router = useRouter()\r\nconst store = useStore()\r\nconst loginFormRef = ref(null)\r\nconst loading = ref(false)\r\n\r\nconst loginForm = reactive({\r\n  username: '',\r\n  password: ''\r\n})\r\n\r\nconst loginRules = {\r\n  username: [\r\n    { required: true, message: '请输入用户名', trigger: 'blur' }\r\n  ],\r\n  password: [\r\n    { required: true, message: '请输入密码', trigger: 'blur' },\r\n    { min: 6, message: '密码长度不能小于6位', trigger: 'blur' }\r\n  ]\r\n}\r\n\r\nconst handleLogin = () => {\r\n  loginFormRef.value?.validate(valid => {\r\n    if (valid) {\r\n      loading.value = true\r\n      store.dispatch('user/login', loginForm)\r\n        .then(() => {\r\n          ElMessage.success('登录成功')\r\n          router.push('/')\r\n        })\r\n        .catch(error => {\r\n          ElMessage.error(error.message || '登录失败')\r\n        })\r\n        .finally(() => {\r\n          loading.value = false\r\n        })\r\n    }\r\n  })\r\n}\r\n</script>\r\n\r\n<style lang=\"scss\" scoped>\r\n.login-container {\r\n  height: 100vh;\r\n  display: flex;\r\n  justify-content: center;\r\n  align-items: center;\r\n  background-color: #f0f2f5;\r\n  \r\n  .login-card {\r\n    width: 400px;\r\n    \r\n    .card-header {\r\n      text-align: center;\r\n      \r\n      h2 {\r\n        margin: 0;\r\n        color: #303133;\r\n      }\r\n    }\r\n    \r\n    .login-form {\r\n      .login-button {\r\n        width: 100%;\r\n      }\r\n    }\r\n  }\r\n}\r\n</style> "],"mappings":";;EACOA,KAAK,EAAC;AAAiB;;;;;;;uBAA5BC,mBAAA,CA8CM,OA9CNC,UA8CM,GA7CJC,YAAA,CA4CUC,kBAAA;IA5CDJ,KAAK,EAAC;EAAY;IACdK,MAAM,EAAAC,QAAA,CACf,MAEMC,MAAA,QAAAA,MAAA,OAFNC,mBAAA,CAEM;MAFDR,KAAK,EAAC;IAAa,IACtBQ,mBAAA,CAAe,YAAX,QAAM,E;IALpBC,OAAA,EAAAH,QAAA,CASM,MAoCU,CApCVH,YAAA,CAoCUO,kBAAA;MAnCRC,GAAG,EAAC,cAAc;MACjBC,KAAK,EAAEC,MAAA,CAAAC,SAAS;MAChBC,KAAK,EAAEF,MAAA,CAAAG,UAAU;MAClB,aAAW,EAAC,GAAG;MACfhB,KAAK,EAAC;;MAddS,OAAA,EAAAH,QAAA,CAgBQ,MAMe,CANfH,YAAA,CAMec,uBAAA;QANDC,IAAI,EAAC;MAAU;QAhBrCT,OAAA,EAAAH,QAAA,CAiBU,MAIE,CAJFH,YAAA,CAIEgB,mBAAA;UArBZC,UAAA,EAkBqBP,MAAA,CAAAC,SAAS,CAACO,QAAQ;UAlBvC,uBAAAd,MAAA,QAAAA,MAAA,MAAAe,MAAA,IAkBqBT,MAAA,CAAAC,SAAS,CAACO,QAAQ,GAAAC,MAAA;UAC3BC,WAAW,EAAC,KAAK;UACjB,aAAW,EAAC;;QApBxBC,CAAA;UAwBQrB,YAAA,CASec,uBAAA;QATDC,IAAI,EAAC;MAAU;QAxBrCT,OAAA,EAAAH,QAAA,CAyBU,MAOE,CAPFH,YAAA,CAOEgB,mBAAA;UAhCZC,UAAA,EA0BqBP,MAAA,CAAAC,SAAS,CAACW,QAAQ;UA1BvC,uBAAAlB,MAAA,QAAAA,MAAA,MAAAe,MAAA,IA0BqBT,MAAA,CAAAC,SAAS,CAACW,QAAQ,GAAAH,MAAA;UAC3BI,IAAI,EAAC,UAAU;UACfH,WAAW,EAAC,IAAI;UAChB,aAAW,EAAC,MAAM;UAClB,eAAa,EAAb,EAAa;UACZI,OAAK,EA/BlBC,SAAA,CA+B0Bf,MAAA,CAAAgB,WAAW;;QA/BrCL,CAAA;UAmCQrB,YAAA,CASec,uBAAA;QA5CvBR,OAAA,EAAAH,QAAA,CAoCU,MAOY,CAPZH,YAAA,CAOY2B,oBAAA;UANTC,OAAO,EAAElB,MAAA,CAAAkB,OAAO;UACjBL,IAAI,EAAC,SAAS;UACd1B,KAAK,EAAC,cAAc;UACnBgC,OAAK,EAAEnB,MAAA,CAAAgB;;UAxCpBpB,OAAA,EAAAH,QAAA,CAyCW,MAEDC,MAAA,QAAAA,MAAA,OA3CV0B,gBAAA,CAyCW,MAED,E;UA3CVT,CAAA;UAAAU,EAAA;;QAAAV,CAAA;;MAAAA,CAAA;;IAAAA,CAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}