{"ast":null,"code":"import { searchOpinions, getOpinionStats, exportOpinions } from '@/api/opinion';\nconst state = {\n  opinionList: [],\n  totalCount: 0,\n  loading: false,\n  stats: {\n    sentimentDistribution: [],\n    platformDistribution: [],\n    trendData: []\n  }\n};\nconst mutations = {\n  SET_OPINION_LIST: (state, list) => {\n    state.opinionList = list;\n  },\n  SET_TOTAL_COUNT: (state, count) => {\n    state.totalCount = count;\n  },\n  SET_LOADING: (state, status) => {\n    state.loading = status;\n  },\n  SET_STATS: (state, stats) => {\n    state.stats = stats;\n  }\n};\nconst actions = {\n  // 搜索舆情数据\n  searchOpinions({\n    commit\n  }, params) {\n    commit('SET_LOADING', true);\n    return new Promise((resolve, reject) => {\n      searchOpinions(params).then(response => {\n        const {\n          data\n        } = response;\n        commit('SET_OPINION_LIST', data.list);\n        commit('SET_TOTAL_COUNT', data.total);\n        commit('SET_LOADING', false);\n        resolve(data);\n      }).catch(error => {\n        commit('SET_LOADING', false);\n        reject(error);\n      });\n    });\n  },\n  // 获取舆情统计数据\n  getOpinionStats({\n    commit\n  }) {\n    return new Promise((resolve, reject) => {\n      getOpinionStats().then(response => {\n        const {\n          data\n        } = response;\n        commit('SET_STATS', data);\n        resolve(data);\n      }).catch(error => {\n        reject(error);\n      });\n    });\n  },\n  // 导出舆情数据\n  exportOpinions({\n    commit\n  }, params) {\n    return new Promise((resolve, reject) => {\n      exportOpinions(params).then(response => {\n        resolve(response);\n      }).catch(error => {\n        reject(error);\n      });\n    });\n  }\n};\nexport default {\n  namespaced: true,\n  state,\n  mutations,\n  actions\n};","map":{"version":3,"names":["searchOpinions","getOpinionStats","exportOpinions","state","opinionList","totalCount","loading","stats","sentimentDistribution","platformDistribution","trendData","mutations","SET_OPINION_LIST","list","SET_TOTAL_COUNT","count","SET_LOADING","status","SET_STATS","actions","commit","params","Promise","resolve","reject","then","response","data","total","catch","error","namespaced"],"sources":["D:/a课程/软件工程/OpinionAnalysis/src/store/modules/opinion.js"],"sourcesContent":["import { searchOpinions, getOpinionStats, exportOpinions } from '@/api/opinion'\r\n\r\nconst state = {\r\n  opinionList: [],\r\n  totalCount: 0,\r\n  loading: false,\r\n  stats: {\r\n    sentimentDistribution: [],\r\n    platformDistribution: [],\r\n    trendData: []\r\n  }\r\n}\r\n\r\nconst mutations = {\r\n  SET_OPINION_LIST: (state, list) => {\r\n    state.opinionList = list\r\n  },\r\n  SET_TOTAL_COUNT: (state, count) => {\r\n    state.totalCount = count\r\n  },\r\n  SET_LOADING: (state, status) => {\r\n    state.loading = status\r\n  },\r\n  SET_STATS: (state, stats) => {\r\n    state.stats = stats\r\n  }\r\n}\r\n\r\nconst actions = {\r\n  // 搜索舆情数据\r\n  searchOpinions({ commit }, params) {\r\n    commit('SET_LOADING', true)\r\n    return new Promise((resolve, reject) => {\r\n      searchOpinions(params)\r\n        .then(response => {\r\n          const { data } = response\r\n          commit('SET_OPINION_LIST', data.list)\r\n          commit('SET_TOTAL_COUNT', data.total)\r\n          commit('SET_LOADING', false)\r\n          resolve(data)\r\n        })\r\n        .catch(error => {\r\n          commit('SET_LOADING', false)\r\n          reject(error)\r\n        })\r\n    })\r\n  },\r\n\r\n  // 获取舆情统计数据\r\n  getOpinionStats({ commit }) {\r\n    return new Promise((resolve, reject) => {\r\n      getOpinionStats()\r\n        .then(response => {\r\n          const { data } = response\r\n          commit('SET_STATS', data)\r\n          resolve(data)\r\n        })\r\n        .catch(error => {\r\n          reject(error)\r\n        })\r\n    })\r\n  },\r\n\r\n  // 导出舆情数据\r\n  exportOpinions({ commit }, params) {\r\n    return new Promise((resolve, reject) => {\r\n      exportOpinions(params)\r\n        .then(response => {\r\n          resolve(response)\r\n        })\r\n        .catch(error => {\r\n          reject(error)\r\n        })\r\n    })\r\n  }\r\n}\r\n\r\nexport default {\r\n  namespaced: true,\r\n  state,\r\n  mutations,\r\n  actions\r\n} "],"mappings":"AAAA,SAASA,cAAc,EAAEC,eAAe,EAAEC,cAAc,QAAQ,eAAe;AAE/E,MAAMC,KAAK,GAAG;EACZC,WAAW,EAAE,EAAE;EACfC,UAAU,EAAE,CAAC;EACbC,OAAO,EAAE,KAAK;EACdC,KAAK,EAAE;IACLC,qBAAqB,EAAE,EAAE;IACzBC,oBAAoB,EAAE,EAAE;IACxBC,SAAS,EAAE;EACb;AACF,CAAC;AAED,MAAMC,SAAS,GAAG;EAChBC,gBAAgB,EAAEA,CAACT,KAAK,EAAEU,IAAI,KAAK;IACjCV,KAAK,CAACC,WAAW,GAAGS,IAAI;EAC1B,CAAC;EACDC,eAAe,EAAEA,CAACX,KAAK,EAAEY,KAAK,KAAK;IACjCZ,KAAK,CAACE,UAAU,GAAGU,KAAK;EAC1B,CAAC;EACDC,WAAW,EAAEA,CAACb,KAAK,EAAEc,MAAM,KAAK;IAC9Bd,KAAK,CAACG,OAAO,GAAGW,MAAM;EACxB,CAAC;EACDC,SAAS,EAAEA,CAACf,KAAK,EAAEI,KAAK,KAAK;IAC3BJ,KAAK,CAACI,KAAK,GAAGA,KAAK;EACrB;AACF,CAAC;AAED,MAAMY,OAAO,GAAG;EACd;EACAnB,cAAcA,CAAC;IAAEoB;EAAO,CAAC,EAAEC,MAAM,EAAE;IACjCD,MAAM,CAAC,aAAa,EAAE,IAAI,CAAC;IAC3B,OAAO,IAAIE,OAAO,CAAC,CAACC,OAAO,EAAEC,MAAM,KAAK;MACtCxB,cAAc,CAACqB,MAAM,CAAC,CACnBI,IAAI,CAACC,QAAQ,IAAI;QAChB,MAAM;UAAEC;QAAK,CAAC,GAAGD,QAAQ;QACzBN,MAAM,CAAC,kBAAkB,EAAEO,IAAI,CAACd,IAAI,CAAC;QACrCO,MAAM,CAAC,iBAAiB,EAAEO,IAAI,CAACC,KAAK,CAAC;QACrCR,MAAM,CAAC,aAAa,EAAE,KAAK,CAAC;QAC5BG,OAAO,CAACI,IAAI,CAAC;MACf,CAAC,CAAC,CACDE,KAAK,CAACC,KAAK,IAAI;QACdV,MAAM,CAAC,aAAa,EAAE,KAAK,CAAC;QAC5BI,MAAM,CAACM,KAAK,CAAC;MACf,CAAC,CAAC;IACN,CAAC,CAAC;EACJ,CAAC;EAED;EACA7B,eAAeA,CAAC;IAAEmB;EAAO,CAAC,EAAE;IAC1B,OAAO,IAAIE,OAAO,CAAC,CAACC,OAAO,EAAEC,MAAM,KAAK;MACtCvB,eAAe,CAAC,CAAC,CACdwB,IAAI,CAACC,QAAQ,IAAI;QAChB,MAAM;UAAEC;QAAK,CAAC,GAAGD,QAAQ;QACzBN,MAAM,CAAC,WAAW,EAAEO,IAAI,CAAC;QACzBJ,OAAO,CAACI,IAAI,CAAC;MACf,CAAC,CAAC,CACDE,KAAK,CAACC,KAAK,IAAI;QACdN,MAAM,CAACM,KAAK,CAAC;MACf,CAAC,CAAC;IACN,CAAC,CAAC;EACJ,CAAC;EAED;EACA5B,cAAcA,CAAC;IAAEkB;EAAO,CAAC,EAAEC,MAAM,EAAE;IACjC,OAAO,IAAIC,OAAO,CAAC,CAACC,OAAO,EAAEC,MAAM,KAAK;MACtCtB,cAAc,CAACmB,MAAM,CAAC,CACnBI,IAAI,CAACC,QAAQ,IAAI;QAChBH,OAAO,CAACG,QAAQ,CAAC;MACnB,CAAC,CAAC,CACDG,KAAK,CAACC,KAAK,IAAI;QACdN,MAAM,CAACM,KAAK,CAAC;MACf,CAAC,CAAC;IACN,CAAC,CAAC;EACJ;AACF,CAAC;AAED,eAAe;EACbC,UAAU,EAAE,IAAI;EAChB5B,KAAK;EACLQ,SAAS;EACTQ;AACF,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}