{"ast":null,"code":"import { searchOpinions, getOpinionStats, exportOpinions } from '@/api/opinion';\nconst state = {\n  opinionList: [],\n  totalCount: 0,\n  loading: false,\n  stats: {\n    sentimentDistribution: [],\n    platformDistribution: [],\n    trendData: []\n  },\n  exportHistory: [],\n  exportLoading: false\n};\nconst mutations = {\n  SET_OPINION_LIST: (state, list) => {\n    state.opinionList = list;\n  },\n  SET_TOTAL_COUNT: (state, count) => {\n    state.totalCount = count;\n  },\n  SET_LOADING: (state, status) => {\n    state.loading = status;\n  },\n  SET_STATS: (state, stats) => {\n    state.stats = stats;\n  },\n  SET_EXPORT_HISTORY(state, history) {\n    state.exportHistory = history;\n  },\n  SET_EXPORT_LOADING(state, loading) {\n    state.exportLoading = loading;\n  }\n};\nconst actions = {\n  // 搜索舆情数据\n  searchOpinions({\n    commit\n  }, params) {\n    commit('SET_LOADING', true);\n    return new Promise((resolve, reject) => {\n      searchOpinions(params).then(response => {\n        const {\n          data\n        } = response;\n        commit('SET_OPINION_LIST', data.list);\n        commit('SET_TOTAL_COUNT', data.total);\n        commit('SET_LOADING', false);\n        resolve(data);\n      }).catch(error => {\n        commit('SET_LOADING', false);\n        reject(error);\n      });\n    });\n  },\n  // 获取舆情统计数据\n  getOpinionStats({\n    commit\n  }) {\n    return new Promise((resolve, reject) => {\n      getOpinionStats().then(response => {\n        const {\n          data\n        } = response;\n        commit('SET_STATS', data);\n        resolve(data);\n      }).catch(error => {\n        reject(error);\n      });\n    });\n  },\n  // 获取导出历史\n  async getExportHistory({\n    commit\n  }) {\n    commit('SET_EXPORT_LOADING', true);\n    try {\n      const response = await api.get('/opinion/export/history');\n      commit('SET_EXPORT_HISTORY', response.data);\n      return response.data;\n    } finally {\n      commit('SET_EXPORT_LOADING', false);\n    }\n  },\n  // 导出数据\n  async exportOpinions({\n    commit\n  }, params) {\n    commit('SET_EXPORT_LOADING', true);\n    try {\n      const response = await api.post('/opinion/export', params);\n      return response.data;\n    } finally {\n      commit('SET_EXPORT_LOADING', false);\n    }\n  },\n  // 下载导出文件\n  async downloadExportFile({\n    commit\n  }, fileName) {\n    try {\n      const response = await api.get(`/opinion/export/download/${fileName}`, {\n        responseType: 'blob'\n      });\n\n      // 创建下载链接\n      const url = window.URL.createObjectURL(new Blob([response.data]));\n      const link = document.createElement('a');\n      link.href = url;\n      link.setAttribute('download', fileName);\n      document.body.appendChild(link);\n      link.click();\n      document.body.removeChild(link);\n      window.URL.revokeObjectURL(url);\n    } catch (error) {\n      throw error;\n    }\n  }\n};\nexport default {\n  namespaced: true,\n  state,\n  mutations,\n  actions\n};","map":{"version":3,"names":["searchOpinions","getOpinionStats","exportOpinions","state","opinionList","totalCount","loading","stats","sentimentDistribution","platformDistribution","trendData","exportHistory","exportLoading","mutations","SET_OPINION_LIST","list","SET_TOTAL_COUNT","count","SET_LOADING","status","SET_STATS","SET_EXPORT_HISTORY","history","SET_EXPORT_LOADING","actions","commit","params","Promise","resolve","reject","then","response","data","total","catch","error","getExportHistory","api","get","post","downloadExportFile","fileName","responseType","url","window","URL","createObjectURL","Blob","link","document","createElement","href","setAttribute","body","appendChild","click","removeChild","revokeObjectURL","namespaced"],"sources":["D:/a课程/软件工程/OpinionAnalysis/src/store/modules/opinion.js"],"sourcesContent":["import { searchOpinions, getOpinionStats, exportOpinions } from '@/api/opinion'\n\nconst state = {\n  opinionList: [],\n  totalCount: 0,\n  loading: false,\n  stats: {\n    sentimentDistribution: [],\n    platformDistribution: [],\n    trendData: []\n  },\n  exportHistory: [],\n  exportLoading: false\n}\n\nconst mutations = {\n  SET_OPINION_LIST: (state, list) => {\n    state.opinionList = list\n  },\n  SET_TOTAL_COUNT: (state, count) => {\n    state.totalCount = count\n  },\n  SET_LOADING: (state, status) => {\n    state.loading = status\n  },\n  SET_STATS: (state, stats) => {\n    state.stats = stats\n  },\n  SET_EXPORT_HISTORY(state, history) {\n    state.exportHistory = history\n  },\n  SET_EXPORT_LOADING(state, loading) {\n    state.exportLoading = loading\n  }\n}\n\nconst actions = {\n  // 搜索舆情数据\n  searchOpinions({ commit }, params) {\n    commit('SET_LOADING', true)\n    return new Promise((resolve, reject) => {\n      searchOpinions(params)\n        .then(response => {\n          const { data } = response\n          commit('SET_OPINION_LIST', data.list)\n          commit('SET_TOTAL_COUNT', data.total)\n          commit('SET_LOADING', false)\n          resolve(data)\n        })\n        .catch(error => {\n          commit('SET_LOADING', false)\n          reject(error)\n        })\n    })\n  },\n\n  // 获取舆情统计数据\n  getOpinionStats({ commit }) {\n    return new Promise((resolve, reject) => {\n      getOpinionStats()\n        .then(response => {\n          const { data } = response\n          commit('SET_STATS', data)\n          resolve(data)\n        })\n        .catch(error => {\n          reject(error)\n        })\n    })\n  },\n\n  // 获取导出历史\n  async getExportHistory({ commit }) {\n    commit('SET_EXPORT_LOADING', true)\n    try {\n      const response = await api.get('/opinion/export/history')\n      commit('SET_EXPORT_HISTORY', response.data)\n      return response.data\n    } finally {\n      commit('SET_EXPORT_LOADING', false)\n    }\n  },\n\n  // 导出数据\n  async exportOpinions({ commit }, params) {\n    commit('SET_EXPORT_LOADING', true)\n    try {\n      const response = await api.post('/opinion/export', params)\n      return response.data\n    } finally {\n      commit('SET_EXPORT_LOADING', false)\n    }\n  },\n\n  // 下载导出文件\n  async downloadExportFile({ commit }, fileName) {\n    try {\n      const response = await api.get(`/opinion/export/download/${fileName}`, {\n        responseType: 'blob'\n      })\n      \n      // 创建下载链接\n      const url = window.URL.createObjectURL(new Blob([response.data]))\n      const link = document.createElement('a')\n      link.href = url\n      link.setAttribute('download', fileName)\n      document.body.appendChild(link)\n      link.click()\n      document.body.removeChild(link)\n      window.URL.revokeObjectURL(url)\n    } catch (error) {\n      throw error\n    }\n  }\n}\n\nexport default {\n  namespaced: true,\n  state,\n  mutations,\n  actions\n} "],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}