{"ast":null,"code":"import { ref, reactive, onMounted } from 'vue';\nimport { ElMessage, ElMessageBox } from 'element-plus';\nexport default {\n  __name: 'System',\n  setup(__props, {\n    expose: __expose\n  }) {\n    __expose();\n    const activeTab = ref('user');\n    const currentPage = ref(1);\n    const pageSize = ref(10);\n    const total = ref(0);\n    const dialogVisible = ref(false);\n    const dialogType = ref('add');\n    const userFormRef = ref(null);\n    const userList = ref([]);\n    const logList = ref([]);\n    const userForm = reactive({\n      username: '',\n      password: '',\n      role: '',\n      email: '',\n      phone: ''\n    });\n    const userRules = {\n      username: [{\n        required: true,\n        message: '请输入用户名',\n        trigger: 'blur'\n      }, {\n        min: 3,\n        max: 20,\n        message: '长度在 3 到 20 个字符',\n        trigger: 'blur'\n      }],\n      password: [{\n        required: true,\n        message: '请输入密码',\n        trigger: 'blur'\n      }, {\n        min: 6,\n        max: 20,\n        message: '长度在 6 到 20 个字符',\n        trigger: 'blur'\n      }],\n      role: [{\n        required: true,\n        message: '请选择角色',\n        trigger: 'change'\n      }],\n      email: [{\n        required: true,\n        message: '请输入邮箱',\n        trigger: 'blur'\n      }, {\n        type: 'email',\n        message: '请输入正确的邮箱地址',\n        trigger: 'blur'\n      }],\n      phone: [{\n        required: true,\n        message: '请输入手机号',\n        trigger: 'blur'\n      }, {\n        pattern: /^1[3-9]\\d{9}$/,\n        message: '请输入正确的手机号',\n        trigger: 'blur'\n      }]\n    };\n    const handleAddUser = () => {\n      dialogType.value = 'add';\n      Object.keys(userForm).forEach(key => {\n        userForm[key] = '';\n      });\n      dialogVisible.value = true;\n    };\n    const handleEditUser = row => {\n      dialogType.value = 'edit';\n      Object.keys(userForm).forEach(key => {\n        userForm[key] = row[key];\n      });\n      dialogVisible.value = true;\n    };\n    const handleDeleteUser = row => {\n      ElMessageBox.confirm('确认删除该用户吗？', '提示', {\n        confirmButtonText: '确定',\n        cancelButtonText: '取消',\n        type: 'warning'\n      }).then(() => {\n        // 调用删除用户接口\n        ElMessage.success('删除成功');\n      });\n    };\n    const handleSubmitUser = () => {\n      userFormRef.value.validate(valid => {\n        if (valid) {\n          // 调用添加/编辑用户接口\n          ElMessage.success(dialogType.value === 'add' ? '添加成功' : '编辑成功');\n          dialogVisible.value = false;\n        }\n      });\n    };\n    const handleExportLog = () => {\n      // 调用导出日志接口\n      ElMessage.success('导出成功');\n    };\n    const handleSizeChange = val => {\n      pageSize.value = val;\n      // 重新获取数据\n    };\n    const handleCurrentChange = val => {\n      currentPage.value = val;\n      // 重新获取数据\n    };\n    onMounted(() => {\n      // 获取用户列表和日志列表数据\n    });\n    const __returned__ = {\n      activeTab,\n      currentPage,\n      pageSize,\n      total,\n      dialogVisible,\n      dialogType,\n      userFormRef,\n      userList,\n      logList,\n      userForm,\n      userRules,\n      handleAddUser,\n      handleEditUser,\n      handleDeleteUser,\n      handleSubmitUser,\n      handleExportLog,\n      handleSizeChange,\n      handleCurrentChange,\n      ref,\n      reactive,\n      onMounted,\n      get ElMessage() {\n        return ElMessage;\n      },\n      get ElMessageBox() {\n        return ElMessageBox;\n      }\n    };\n    Object.defineProperty(__returned__, '__isScriptSetup', {\n      enumerable: false,\n      value: true\n    });\n    return __returned__;\n  }\n};","map":{"version":3,"names":["ref","reactive","onMounted","ElMessage","ElMessageBox","activeTab","currentPage","pageSize","total","dialogVisible","dialogType","userFormRef","userList","logList","userForm","username","password","role","email","phone","userRules","required","message","trigger","min","max","type","pattern","handleAddUser","value","Object","keys","forEach","key","handleEditUser","row","handleDeleteUser","confirm","confirmButtonText","cancelButtonText","then","success","handleSubmitUser","validate","valid","handleExportLog","handleSizeChange","val","handleCurrentChange"],"sources":["D:/a课程/软件工程/OpinionAnalysis/src/views/System.vue"],"sourcesContent":["<template>\r\n  <div class=\"system-container\">\r\n    <el-tabs v-model=\"activeTab\">\r\n      <el-tab-pane label=\"用户管理\" name=\"user\">\r\n        <el-card>\r\n          <template #header>\r\n            <div class=\"card-header\">\r\n              <span>用户列表</span>\r\n              <el-button type=\"primary\" @click=\"handleAddUser\">添加用户</el-button>\r\n            </div>\r\n          </template>\r\n\r\n          <el-table :data=\"userList\" border style=\"width: 100%\">\r\n            <el-table-column prop=\"username\" label=\"用户名\" />\r\n            <el-table-column prop=\"role\" label=\"角色\">\r\n              <template #default=\"{ row }\">\r\n                <el-tag :type=\"row.role === 'admin' ? 'danger' : row.role === 'analyst' ? 'warning' : 'info'\">\r\n                  {{ row.role === 'admin' ? '管理员' : row.role === 'analyst' ? '分析师' : '访客' }}\r\n                </el-tag>\r\n              </template>\r\n            </el-table-column>\r\n            <el-table-column prop=\"email\" label=\"邮箱\" />\r\n            <el-table-column prop=\"phone\" label=\"手机号\" />\r\n            <el-table-column prop=\"lastLogin\" label=\"最后登录时间\" />\r\n            <el-table-column label=\"操作\" width=\"200\">\r\n              <template #default=\"{ row }\">\r\n                <el-button type=\"primary\" link @click=\"handleEditUser(row)\">编辑</el-button>\r\n                <el-button type=\"danger\" link @click=\"handleDeleteUser(row)\">删除</el-button>\r\n              </template>\r\n            </el-table-column>\r\n          </el-table>\r\n        </el-card>\r\n      </el-tab-pane>\r\n\r\n      <el-tab-pane label=\"系统日志\" name=\"log\">\r\n        <el-card>\r\n          <template #header>\r\n            <div class=\"card-header\">\r\n              <span>系统日志</span>\r\n              <el-button type=\"primary\" @click=\"handleExportLog\">导出日志</el-button>\r\n            </div>\r\n          </template>\r\n\r\n          <el-table :data=\"logList\" border style=\"width: 100%\">\r\n            <el-table-column prop=\"username\" label=\"用户名\" />\r\n            <el-table-column prop=\"operation\" label=\"操作类型\" />\r\n            <el-table-column prop=\"module\" label=\"功能模块\" />\r\n            <el-table-column prop=\"detail\" label=\"操作详情\" show-overflow-tooltip />\r\n            <el-table-column prop=\"ipAddress\" label=\"IP地址\" />\r\n            <el-table-column prop=\"createTime\" label=\"操作时间\" />\r\n            <el-table-column prop=\"status\" label=\"状态\">\r\n              <template #default=\"{ row }\">\r\n                <el-tag :type=\"row.status === 'success' ? 'success' : 'danger'\">\r\n                  {{ row.status === 'success' ? '成功' : '失败' }}\r\n                </el-tag>\r\n              </template>\r\n            </el-table-column>\r\n          </el-table>\r\n\r\n          <div class=\"pagination-container\">\r\n            <el-pagination\r\n              v-model:current-page=\"currentPage\"\r\n              v-model:page-size=\"pageSize\"\r\n              :page-sizes=\"[10, 20, 50, 100]\"\r\n              :total=\"total\"\r\n              layout=\"total, sizes, prev, pager, next, jumper\"\r\n              @size-change=\"handleSizeChange\"\r\n              @current-change=\"handleCurrentChange\"\r\n            />\r\n          </div>\r\n        </el-card>\r\n      </el-tab-pane>\r\n    </el-tabs>\r\n\r\n    <!-- 用户表单对话框 -->\r\n    <el-dialog\r\n      v-model=\"dialogVisible\"\r\n      :title=\"dialogType === 'add' ? '添加用户' : '编辑用户'\"\r\n      width=\"500px\"\r\n    >\r\n      <el-form\r\n        ref=\"userFormRef\"\r\n        :model=\"userForm\"\r\n        :rules=\"userRules\"\r\n        label-width=\"100px\"\r\n      >\r\n        <el-form-item label=\"用户名\" prop=\"username\">\r\n          <el-input v-model=\"userForm.username\" />\r\n        </el-form-item>\r\n        <el-form-item label=\"密码\" prop=\"password\" v-if=\"dialogType === 'add'\">\r\n          <el-input v-model=\"userForm.password\" type=\"password\" />\r\n        </el-form-item>\r\n        <el-form-item label=\"角色\" prop=\"role\">\r\n          <el-select v-model=\"userForm.role\">\r\n            <el-option label=\"管理员\" value=\"admin\" />\r\n            <el-option label=\"分析师\" value=\"analyst\" />\r\n            <el-option label=\"访客\" value=\"guest\" />\r\n          </el-select>\r\n        </el-form-item>\r\n        <el-form-item label=\"邮箱\" prop=\"email\">\r\n          <el-input v-model=\"userForm.email\" />\r\n        </el-form-item>\r\n        <el-form-item label=\"手机号\" prop=\"phone\">\r\n          <el-input v-model=\"userForm.phone\" />\r\n        </el-form-item>\r\n      </el-form>\r\n      <template #footer>\r\n        <span class=\"dialog-footer\">\r\n          <el-button @click=\"dialogVisible = false\">取消</el-button>\r\n          <el-button type=\"primary\" @click=\"handleSubmitUser\">确定</el-button>\r\n        </span>\r\n      </template>\r\n    </el-dialog>\r\n  </div>\r\n</template>\r\n\r\n<script setup>\r\nimport { ref, reactive, onMounted } from 'vue'\r\nimport { ElMessage, ElMessageBox } from 'element-plus'\r\n\r\nconst activeTab = ref('user')\r\nconst currentPage = ref(1)\r\nconst pageSize = ref(10)\r\nconst total = ref(0)\r\nconst dialogVisible = ref(false)\r\nconst dialogType = ref('add')\r\nconst userFormRef = ref(null)\r\n\r\nconst userList = ref([])\r\nconst logList = ref([])\r\n\r\nconst userForm = reactive({\r\n  username: '',\r\n  password: '',\r\n  role: '',\r\n  email: '',\r\n  phone: ''\r\n})\r\n\r\nconst userRules = {\r\n  username: [\r\n    { required: true, message: '请输入用户名', trigger: 'blur' },\r\n    { min: 3, max: 20, message: '长度在 3 到 20 个字符', trigger: 'blur' }\r\n  ],\r\n  password: [\r\n    { required: true, message: '请输入密码', trigger: 'blur' },\r\n    { min: 6, max: 20, message: '长度在 6 到 20 个字符', trigger: 'blur' }\r\n  ],\r\n  role: [{ required: true, message: '请选择角色', trigger: 'change' }],\r\n  email: [\r\n    { required: true, message: '请输入邮箱', trigger: 'blur' },\r\n    { type: 'email', message: '请输入正确的邮箱地址', trigger: 'blur' }\r\n  ],\r\n  phone: [\r\n    { required: true, message: '请输入手机号', trigger: 'blur' },\r\n    { pattern: /^1[3-9]\\d{9}$/, message: '请输入正确的手机号', trigger: 'blur' }\r\n  ]\r\n}\r\n\r\nconst handleAddUser = () => {\r\n  dialogType.value = 'add'\r\n  Object.keys(userForm).forEach(key => {\r\n    userForm[key] = ''\r\n  })\r\n  dialogVisible.value = true\r\n}\r\n\r\nconst handleEditUser = row => {\r\n  dialogType.value = 'edit'\r\n  Object.keys(userForm).forEach(key => {\r\n    userForm[key] = row[key]\r\n  })\r\n  dialogVisible.value = true\r\n}\r\n\r\nconst handleDeleteUser = row => {\r\n  ElMessageBox.confirm('确认删除该用户吗？', '提示', {\r\n    confirmButtonText: '确定',\r\n    cancelButtonText: '取消',\r\n    type: 'warning'\r\n  }).then(() => {\r\n    // 调用删除用户接口\r\n    ElMessage.success('删除成功')\r\n  })\r\n}\r\n\r\nconst handleSubmitUser = () => {\r\n  userFormRef.value.validate(valid => {\r\n    if (valid) {\r\n      // 调用添加/编辑用户接口\r\n      ElMessage.success(dialogType.value === 'add' ? '添加成功' : '编辑成功')\r\n      dialogVisible.value = false\r\n    }\r\n  })\r\n}\r\n\r\nconst handleExportLog = () => {\r\n  // 调用导出日志接口\r\n  ElMessage.success('导出成功')\r\n}\r\n\r\nconst handleSizeChange = val => {\r\n  pageSize.value = val\r\n  // 重新获取数据\r\n}\r\n\r\nconst handleCurrentChange = val => {\r\n  currentPage.value = val\r\n  // 重新获取数据\r\n}\r\n\r\nonMounted(() => {\r\n  // 获取用户列表和日志列表数据\r\n})\r\n</script>\r\n\r\n<style lang=\"scss\" scoped>\r\n.system-container {\r\n  .card-header {\r\n    display: flex;\r\n    justify-content: space-between;\r\n    align-items: center;\r\n  }\r\n\r\n  .pagination-container {\r\n    margin-top: 20px;\r\n    text-align: right;\r\n  }\r\n}\r\n</style> "],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}