{"ast":null,"code":"import axios from 'axios';\nimport { ElMessage } from 'element-plus';\n\n// 创建axios实例\nconst service = axios.create({\n  baseURL: process.env.VUE_APP_BASE_API,\n  timeout: 15000\n});\n\n// 请求拦截器\nservice.interceptors.request.use(config => {\n  const token = localStorage.getItem('token');\n  if (token) {\n    config.headers['Authorization'] = `Bearer ${token}`;\n  }\n  return config;\n}, error => {\n  console.error(error);\n  return Promise.reject(error);\n});\n\n// 响应拦截器\nservice.interceptors.response.use(response => {\n  const res = response.data;\n  if (res.code !== 200) {\n    ElMessage({\n      message: res.message || '请求失败',\n      type: 'error',\n      duration: 5 * 1000\n    });\n    if (res.code === 401) {\n      // token过期或未登录\n      localStorage.removeItem('token');\n      window.location.href = '/login';\n    }\n    return Promise.reject(new Error(res.message || '请求失败'));\n  } else {\n    return res;\n  }\n}, error => {\n  console.error('请求错误:', error);\n  ElMessage({\n    message: error.message || '请求失败',\n    type: 'error',\n    duration: 5 * 1000\n  });\n  return Promise.reject(error);\n});\nexport default service;","map":{"version":3,"names":["axios","ElMessage","service","create","baseURL","process","env","VUE_APP_BASE_API","timeout","interceptors","request","use","config","token","localStorage","getItem","headers","error","console","Promise","reject","response","res","data","code","message","type","duration","removeItem","window","location","href","Error"],"sources":["D:/a课程/软件工程/OpinionAnalysis/src/api/request.js"],"sourcesContent":["import axios from 'axios'\r\nimport { ElMessage } from 'element-plus'\r\n\r\n// 创建axios实例\r\nconst service = axios.create({\r\n  baseURL: process.env.VUE_APP_BASE_API,\r\n  timeout: 15000\r\n})\r\n\r\n// 请求拦截器\r\nservice.interceptors.request.use(\r\n  config => {\r\n    const token = localStorage.getItem('token')\r\n    if (token) {\r\n      config.headers['Authorization'] = `Bearer ${token}`\r\n    }\r\n    return config\r\n  },\r\n  error => {\r\n    console.error(error)\r\n    return Promise.reject(error)\r\n  }\r\n)\r\n\r\n// 响应拦截器\r\nservice.interceptors.response.use(\r\n  response => {\r\n    const res = response.data\r\n    \r\n    if (res.code !== 200) {\r\n      ElMessage({\r\n        message: res.message || '请求失败',\r\n        type: 'error',\r\n        duration: 5 * 1000\r\n      })\r\n      \r\n      if (res.code === 401) {\r\n        // token过期或未登录\r\n        localStorage.removeItem('token')\r\n        window.location.href = '/login'\r\n      }\r\n      \r\n      return Promise.reject(new Error(res.message || '请求失败'))\r\n    } else {\r\n      return res\r\n    }\r\n  },\r\n  error => {\r\n    console.error('请求错误:', error)\r\n    ElMessage({\r\n      message: error.message || '请求失败',\r\n      type: 'error',\r\n      duration: 5 * 1000\r\n    })\r\n    return Promise.reject(error)\r\n  }\r\n)\r\n\r\nexport default service "],"mappings":"AAAA,OAAOA,KAAK,MAAM,OAAO;AACzB,SAASC,SAAS,QAAQ,cAAc;;AAExC;AACA,MAAMC,OAAO,GAAGF,KAAK,CAACG,MAAM,CAAC;EAC3BC,OAAO,EAAEC,OAAO,CAACC,GAAG,CAACC,gBAAgB;EACrCC,OAAO,EAAE;AACX,CAAC,CAAC;;AAEF;AACAN,OAAO,CAACO,YAAY,CAACC,OAAO,CAACC,GAAG,CAC9BC,MAAM,IAAI;EACR,MAAMC,KAAK,GAAGC,YAAY,CAACC,OAAO,CAAC,OAAO,CAAC;EAC3C,IAAIF,KAAK,EAAE;IACTD,MAAM,CAACI,OAAO,CAAC,eAAe,CAAC,GAAG,UAAUH,KAAK,EAAE;EACrD;EACA,OAAOD,MAAM;AACf,CAAC,EACDK,KAAK,IAAI;EACPC,OAAO,CAACD,KAAK,CAACA,KAAK,CAAC;EACpB,OAAOE,OAAO,CAACC,MAAM,CAACH,KAAK,CAAC;AAC9B,CACF,CAAC;;AAED;AACAf,OAAO,CAACO,YAAY,CAACY,QAAQ,CAACV,GAAG,CAC/BU,QAAQ,IAAI;EACV,MAAMC,GAAG,GAAGD,QAAQ,CAACE,IAAI;EAEzB,IAAID,GAAG,CAACE,IAAI,KAAK,GAAG,EAAE;IACpBvB,SAAS,CAAC;MACRwB,OAAO,EAAEH,GAAG,CAACG,OAAO,IAAI,MAAM;MAC9BC,IAAI,EAAE,OAAO;MACbC,QAAQ,EAAE,CAAC,GAAG;IAChB,CAAC,CAAC;IAEF,IAAIL,GAAG,CAACE,IAAI,KAAK,GAAG,EAAE;MACpB;MACAV,YAAY,CAACc,UAAU,CAAC,OAAO,CAAC;MAChCC,MAAM,CAACC,QAAQ,CAACC,IAAI,GAAG,QAAQ;IACjC;IAEA,OAAOZ,OAAO,CAACC,MAAM,CAAC,IAAIY,KAAK,CAACV,GAAG,CAACG,OAAO,IAAI,MAAM,CAAC,CAAC;EACzD,CAAC,MAAM;IACL,OAAOH,GAAG;EACZ;AACF,CAAC,EACDL,KAAK,IAAI;EACPC,OAAO,CAACD,KAAK,CAAC,OAAO,EAAEA,KAAK,CAAC;EAC7BhB,SAAS,CAAC;IACRwB,OAAO,EAAER,KAAK,CAACQ,OAAO,IAAI,MAAM;IAChCC,IAAI,EAAE,OAAO;IACbC,QAAQ,EAAE,CAAC,GAAG;EAChB,CAAC,CAAC;EACF,OAAOR,OAAO,CAACC,MAAM,CAACH,KAAK,CAAC;AAC9B,CACF,CAAC;AAED,eAAef,OAAO","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}