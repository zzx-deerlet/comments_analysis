{"ast":null,"code":"import { ref, reactive, onMounted } from 'vue';\nimport { useStore } from 'vuex';\nimport { ElMessage } from 'element-plus';\nexport default {\n  __name: 'Search',\n  setup(__props, {\n    expose: __expose\n  }) {\n    __expose();\n    const store = useStore();\n    const searchForm = reactive({\n      keyword: '',\n      platform: '',\n      sentiment: '',\n      dateRange: []\n    });\n    const loading = ref(false);\n    const currentPage = ref(1);\n    const pageSize = ref(10);\n    const total = ref(0);\n    const opinionList = ref([]);\n    const getList = () => {\n      loading.value = true;\n      const params = {\n        page: currentPage.value,\n        pageSize: pageSize.value,\n        ...searchForm,\n        startDate: searchForm.dateRange?.[0],\n        endDate: searchForm.dateRange?.[1]\n      };\n      store.dispatch('opinion/getOpinionList', params).then(data => {\n        opinionList.value = data.list;\n        total.value = data.total;\n      }).catch(error => {\n        ElMessage.error(error.message || '获取数据失败');\n      }).finally(() => {\n        loading.value = false;\n      });\n    };\n    const handleSearch = () => {\n      currentPage.value = 1;\n      getList();\n    };\n    const resetForm = () => {\n      Object.keys(searchForm).forEach(key => {\n        searchForm[key] = key === 'dateRange' ? [] : '';\n      });\n      handleSearch();\n    };\n    const handleSizeChange = val => {\n      pageSize.value = val;\n      getList();\n    };\n    const handleCurrentChange = val => {\n      currentPage.value = val;\n      getList();\n    };\n    const handleExport = () => {\n      const params = {\n        ...searchForm,\n        startDate: searchForm.dateRange?.[0],\n        endDate: searchForm.dateRange?.[1]\n      };\n      store.dispatch('opinion/exportOpinionData', params).then(response => {\n        const blob = new Blob([response.data]);\n        const link = document.createElement('a');\n        link.href = window.URL.createObjectURL(blob);\n        link.download = '舆情数据.xlsx';\n        link.click();\n        window.URL.revokeObjectURL(link.href);\n      }).catch(error => {\n        ElMessage.error(error.message || '导出失败');\n      });\n    };\n    onMounted(() => {\n      getList();\n    });\n    const __returned__ = {\n      store,\n      searchForm,\n      loading,\n      currentPage,\n      pageSize,\n      total,\n      opinionList,\n      getList,\n      handleSearch,\n      resetForm,\n      handleSizeChange,\n      handleCurrentChange,\n      handleExport,\n      ref,\n      reactive,\n      onMounted,\n      get useStore() {\n        return useStore;\n      },\n      get ElMessage() {\n        return ElMessage;\n      }\n    };\n    Object.defineProperty(__returned__, '__isScriptSetup', {\n      enumerable: false,\n      value: true\n    });\n    return __returned__;\n  }\n};","map":{"version":3,"names":["ref","reactive","onMounted","useStore","ElMessage","store","searchForm","keyword","platform","sentiment","dateRange","loading","currentPage","pageSize","total","opinionList","getList","value","params","page","startDate","endDate","dispatch","then","data","list","catch","error","message","finally","handleSearch","resetForm","Object","keys","forEach","key","handleSizeChange","val","handleCurrentChange","handleExport","response","blob","Blob","link","document","createElement","href","window","URL","createObjectURL","download","click","revokeObjectURL"],"sources":["D:/a课程/软件工程/OpinionAnalysis/src/views/Search.vue"],"sourcesContent":["<template>\r\n  <div class=\"search-container\">\r\n    <el-card class=\"search-card\">\r\n      <template #header>\r\n        <div class=\"card-header\">\r\n          <span>舆情搜索</span>\r\n        </div>\r\n      </template>\r\n\r\n      <el-form :model=\"searchForm\" label-width=\"100px\">\r\n        <el-row :gutter=\"20\">\r\n          <el-col :span=\"8\">\r\n            <el-form-item label=\"关键词\">\r\n              <el-input\r\n                v-model=\"searchForm.keyword\"\r\n                placeholder=\"请输入关键词\"\r\n                clearable\r\n              />\r\n            </el-form-item>\r\n          </el-col>\r\n          <el-col :span=\"8\">\r\n            <el-form-item label=\"平台来源\">\r\n              <el-select\r\n                v-model=\"searchForm.platform\"\r\n                placeholder=\"请选择平台\"\r\n                clearable\r\n              >\r\n                <el-option label=\"微博\" value=\"weibo\" />\r\n                <el-option label=\"微信\" value=\"wechat\" />\r\n                <el-option label=\"知乎\" value=\"zhihu\" />\r\n                <el-option label=\"B站\" value=\"bilibili\" />\r\n              </el-select>\r\n            </el-form-item>\r\n          </el-col>\r\n          <el-col :span=\"8\">\r\n            <el-form-item label=\"情感极性\">\r\n              <el-select\r\n                v-model=\"searchForm.sentiment\"\r\n                placeholder=\"请选择情感极性\"\r\n                clearable\r\n              >\r\n                <el-option label=\"正面\" value=\"positive\" />\r\n                <el-option label=\"中性\" value=\"neutral\" />\r\n                <el-option label=\"负面\" value=\"negative\" />\r\n              </el-select>\r\n            </el-form-item>\r\n          </el-col>\r\n        </el-row>\r\n\r\n        <el-row :gutter=\"20\">\r\n          <el-col :span=\"16\">\r\n            <el-form-item label=\"时间范围\">\r\n              <el-date-picker\r\n                v-model=\"searchForm.dateRange\"\r\n                type=\"daterange\"\r\n                range-separator=\"至\"\r\n                start-placeholder=\"开始日期\"\r\n                end-placeholder=\"结束日期\"\r\n                value-format=\"YYYY-MM-DD\"\r\n              />\r\n            </el-form-item>\r\n          </el-col>\r\n          <el-col :span=\"8\">\r\n            <el-form-item>\r\n              <el-button type=\"primary\" @click=\"handleSearch\">搜索</el-button>\r\n              <el-button @click=\"resetForm\">重置</el-button>\r\n            </el-form-item>\r\n          </el-col>\r\n        </el-row>\r\n      </el-form>\r\n    </el-card>\r\n\r\n    <el-card class=\"result-card\">\r\n      <template #header>\r\n        <div class=\"card-header\">\r\n          <span>搜索结果</span>\r\n          <el-button type=\"primary\" @click=\"handleExport\">导出数据</el-button>\r\n        </div>\r\n      </template>\r\n\r\n      <el-table\r\n        v-loading=\"loading\"\r\n        :data=\"opinionList\"\r\n        style=\"width: 100%\"\r\n        border\r\n      >\r\n        <el-table-column prop=\"platform\" label=\"平台\" width=\"100\" />\r\n        <el-table-column prop=\"content\" label=\"内容\" show-overflow-tooltip />\r\n        <el-table-column prop=\"sentiment\" label=\"情感极性\" width=\"100\">\r\n          <template #default=\"{ row }\">\r\n            <el-tag\r\n              :type=\"\r\n                row.sentiment === 'positive'\r\n                  ? 'success'\r\n                  : row.sentiment === 'negative'\r\n                  ? 'danger'\r\n                  : 'info'\r\n              \"\r\n            >\r\n              {{ row.sentiment === 'positive' ? '正面' : row.sentiment === 'negative' ? '负面' : '中性' }}\r\n            </el-tag>\r\n          </template>\r\n        </el-table-column>\r\n        <el-table-column prop=\"keywords\" label=\"关键词\" width=\"200\">\r\n          <template #default=\"{ row }\">\r\n            <el-tag\r\n              v-for=\"keyword in row.keywords\"\r\n              :key=\"keyword\"\r\n              class=\"keyword-tag\"\r\n            >\r\n              {{ keyword }}\r\n            </el-tag>\r\n          </template>\r\n        </el-table-column>\r\n        <el-table-column prop=\"date\" label=\"发布时间\" width=\"180\" />\r\n      </el-table>\r\n\r\n      <div class=\"pagination-container\">\r\n        <el-pagination\r\n          v-model:current-page=\"currentPage\"\r\n          v-model:page-size=\"pageSize\"\r\n          :page-sizes=\"[10, 20, 50, 100]\"\r\n          :total=\"total\"\r\n          layout=\"total, sizes, prev, pager, next, jumper\"\r\n          @size-change=\"handleSizeChange\"\r\n          @current-change=\"handleCurrentChange\"\r\n        />\r\n      </div>\r\n    </el-card>\r\n  </div>\r\n</template>\r\n\r\n<script setup>\r\nimport { ref, reactive, onMounted } from 'vue'\r\nimport { useStore } from 'vuex'\r\nimport { ElMessage } from 'element-plus'\r\n\r\nconst store = useStore()\r\n\r\nconst searchForm = reactive({\r\n  keyword: '',\r\n  platform: '',\r\n  sentiment: '',\r\n  dateRange: []\r\n})\r\n\r\nconst loading = ref(false)\r\nconst currentPage = ref(1)\r\nconst pageSize = ref(10)\r\nconst total = ref(0)\r\nconst opinionList = ref([])\r\n\r\nconst getList = () => {\r\n  loading.value = true\r\n  const params = {\r\n    page: currentPage.value,\r\n    pageSize: pageSize.value,\r\n    ...searchForm,\r\n    startDate: searchForm.dateRange?.[0],\r\n    endDate: searchForm.dateRange?.[1]\r\n  }\r\n\r\n  store\r\n    .dispatch('opinion/getOpinionList', params)\r\n    .then(data => {\r\n      opinionList.value = data.list\r\n      total.value = data.total\r\n    })\r\n    .catch(error => {\r\n      ElMessage.error(error.message || '获取数据失败')\r\n    })\r\n    .finally(() => {\r\n      loading.value = false\r\n    })\r\n}\r\n\r\nconst handleSearch = () => {\r\n  currentPage.value = 1\r\n  getList()\r\n}\r\n\r\nconst resetForm = () => {\r\n  Object.keys(searchForm).forEach(key => {\r\n    searchForm[key] = key === 'dateRange' ? [] : ''\r\n  })\r\n  handleSearch()\r\n}\r\n\r\nconst handleSizeChange = val => {\r\n  pageSize.value = val\r\n  getList()\r\n}\r\n\r\nconst handleCurrentChange = val => {\r\n  currentPage.value = val\r\n  getList()\r\n}\r\n\r\nconst handleExport = () => {\r\n  const params = {\r\n    ...searchForm,\r\n    startDate: searchForm.dateRange?.[0],\r\n    endDate: searchForm.dateRange?.[1]\r\n  }\r\n\r\n  store\r\n    .dispatch('opinion/exportOpinionData', params)\r\n    .then(response => {\r\n      const blob = new Blob([response.data])\r\n      const link = document.createElement('a')\r\n      link.href = window.URL.createObjectURL(blob)\r\n      link.download = '舆情数据.xlsx'\r\n      link.click()\r\n      window.URL.revokeObjectURL(link.href)\r\n    })\r\n    .catch(error => {\r\n      ElMessage.error(error.message || '导出失败')\r\n    })\r\n}\r\n\r\nonMounted(() => {\r\n  getList()\r\n})\r\n</script>\r\n\r\n<style lang=\"scss\" scoped>\r\n.search-container {\r\n  .search-card {\r\n    margin-bottom: 20px;\r\n  }\r\n\r\n  .result-card {\r\n    .card-header {\r\n      display: flex;\r\n      justify-content: space-between;\r\n      align-items: center;\r\n    }\r\n\r\n    .keyword-tag {\r\n      margin-right: 5px;\r\n      margin-bottom: 5px;\r\n    }\r\n\r\n    .pagination-container {\r\n      margin-top: 20px;\r\n      text-align: right;\r\n    }\r\n  }\r\n}\r\n</style> "],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}