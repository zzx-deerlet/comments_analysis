{"ast":null,"code":"import { ref, reactive } from 'vue';\nimport { useStore } from 'vuex';\nimport { useRouter } from 'vue-router';\nimport { ElMessage } from 'element-plus';\nexport default {\n  __name: 'Login',\n  setup(__props, {\n    expose: __expose\n  }) {\n    __expose();\n    const store = useStore();\n    const router = useRouter();\n    const loginForm = reactive({\n      username: '',\n      password: ''\n    });\n    const loginRules = {\n      username: [{\n        required: true,\n        trigger: 'blur',\n        message: '请输入用户名'\n      }],\n      password: [{\n        required: true,\n        trigger: 'blur',\n        message: '请输入密码'\n      }]\n    };\n    const loading = ref(false);\n    const passwordVisible = ref(false);\n    const loginFormRef = ref(null);\n    const handleLogin = () => {\n      loginFormRef.value.validate(valid => {\n        if (valid) {\n          loading.value = true;\n          store.dispatch('user/login', loginForm).then(() => {\n            router.push({\n              path: '/'\n            });\n            ElMessage({\n              message: '登录成功',\n              type: 'success'\n            });\n          }).catch(error => {\n            ElMessage.error(error.message || '登录失败');\n          }).finally(() => {\n            loading.value = false;\n          });\n        }\n      });\n    };\n    const __returned__ = {\n      store,\n      router,\n      loginForm,\n      loginRules,\n      loading,\n      passwordVisible,\n      loginFormRef,\n      handleLogin,\n      ref,\n      reactive,\n      get useStore() {\n        return useStore;\n      },\n      get useRouter() {\n        return useRouter;\n      },\n      get ElMessage() {\n        return ElMessage;\n      }\n    };\n    Object.defineProperty(__returned__, '__isScriptSetup', {\n      enumerable: false,\n      value: true\n    });\n    return __returned__;\n  }\n};","map":{"version":3,"names":["ref","reactive","useStore","useRouter","ElMessage","store","router","loginForm","username","password","loginRules","required","trigger","message","loading","passwordVisible","loginFormRef","handleLogin","value","validate","valid","dispatch","then","push","path","type","catch","error","finally"],"sources":["D:/a课程/软件工程/OpinionAnalysis/src/views/Login.vue"],"sourcesContent":["<template>\r\n  <div class=\"login-container\">\r\n    <el-form\r\n      ref=\"loginForm\"\r\n      :model=\"loginForm\"\r\n      :rules=\"loginRules\"\r\n      class=\"login-form\"\r\n      auto-complete=\"on\"\r\n      label-position=\"left\"\r\n    >\r\n      <div class=\"title-container\">\r\n        <h3 class=\"title\">舆情分析系统</h3>\r\n      </div>\r\n\r\n      <el-form-item prop=\"username\">\r\n        <el-input\r\n          ref=\"username\"\r\n          v-model=\"loginForm.username\"\r\n          placeholder=\"用户名\"\r\n          name=\"username\"\r\n          type=\"text\"\r\n          tabindex=\"1\"\r\n          auto-complete=\"on\"\r\n        >\r\n          <template #prefix>\r\n            <el-icon><User /></el-icon>\r\n          </template>\r\n        </el-input>\r\n      </el-form-item>\r\n\r\n      <el-form-item prop=\"password\">\r\n        <el-input\r\n          ref=\"password\"\r\n          v-model=\"loginForm.password\"\r\n          :type=\"passwordVisible ? 'text' : 'password'\"\r\n          placeholder=\"密码\"\r\n          name=\"password\"\r\n          tabindex=\"2\"\r\n          auto-complete=\"on\"\r\n          @keyup.enter=\"handleLogin\"\r\n        >\r\n          <template #prefix>\r\n            <el-icon><Lock /></el-icon>\r\n          </template>\r\n          <template #suffix>\r\n            <el-icon\r\n              class=\"cursor-pointer\"\r\n              @click=\"passwordVisible = !passwordVisible\"\r\n            >\r\n              <View v-if=\"passwordVisible\" />\r\n              <Hide v-else />\r\n            </el-icon>\r\n          </template>\r\n        </el-input>\r\n      </el-form-item>\r\n\r\n      <el-button\r\n        :loading=\"loading\"\r\n        type=\"primary\"\r\n        style=\"width: 100%; margin-bottom: 30px\"\r\n        @click=\"handleLogin\"\r\n      >\r\n        登录\r\n      </el-button>\r\n    </el-form>\r\n  </div>\r\n</template>\r\n\r\n<script setup>\r\nimport { ref, reactive } from 'vue'\r\nimport { useStore } from 'vuex'\r\nimport { useRouter } from 'vue-router'\r\nimport { ElMessage } from 'element-plus'\r\n\r\nconst store = useStore()\r\nconst router = useRouter()\r\n\r\nconst loginForm = reactive({\r\n  username: '',\r\n  password: ''\r\n})\r\n\r\nconst loginRules = {\r\n  username: [{ required: true, trigger: 'blur', message: '请输入用户名' }],\r\n  password: [{ required: true, trigger: 'blur', message: '请输入密码' }]\r\n}\r\n\r\nconst loading = ref(false)\r\nconst passwordVisible = ref(false)\r\nconst loginFormRef = ref(null)\r\n\r\nconst handleLogin = () => {\r\n  loginFormRef.value.validate(valid => {\r\n    if (valid) {\r\n      loading.value = true\r\n      store\r\n        .dispatch('user/login', loginForm)\r\n        .then(() => {\r\n          router.push({ path: '/' })\r\n          ElMessage({\r\n            message: '登录成功',\r\n            type: 'success'\r\n          })\r\n        })\r\n        .catch(error => {\r\n          ElMessage.error(error.message || '登录失败')\r\n        })\r\n        .finally(() => {\r\n          loading.value = false\r\n        })\r\n    }\r\n  })\r\n}\r\n</script>\r\n\r\n<style lang=\"scss\" scoped>\r\n.login-container {\r\n  min-height: 100vh;\r\n  width: 100%;\r\n  background-color: #2d3a4b;\r\n  overflow: hidden;\r\n  display: flex;\r\n  align-items: center;\r\n  justify-content: center;\r\n\r\n  .login-form {\r\n    width: 400px;\r\n    max-width: 100%;\r\n    padding: 35px;\r\n    margin: 0 auto;\r\n    overflow: hidden;\r\n    background: #fff;\r\n    border-radius: 4px;\r\n    box-shadow: 0 2px 12px 0 rgba(0, 0, 0, 0.1);\r\n\r\n    .title-container {\r\n      text-align: center;\r\n      margin-bottom: 30px;\r\n\r\n      .title {\r\n        font-size: 26px;\r\n        color: #333;\r\n        margin: 0;\r\n      }\r\n    }\r\n  }\r\n}\r\n</style> "],"mappings":"AAqEA,SAASA,GAAG,EAAEC,QAAQ,QAAQ,KAAK;AACnC,SAASC,QAAQ,QAAQ,MAAM;AAC/B,SAASC,SAAS,QAAQ,YAAY;AACtC,SAASC,SAAS,QAAQ,cAAc;;;;;;;IAExC,MAAMC,KAAK,GAAGH,QAAQ,CAAC,CAAC;IACxB,MAAMI,MAAM,GAAGH,SAAS,CAAC,CAAC;IAE1B,MAAMI,SAAS,GAAGN,QAAQ,CAAC;MACzBO,QAAQ,EAAE,EAAE;MACZC,QAAQ,EAAE;IACZ,CAAC,CAAC;IAEF,MAAMC,UAAU,GAAG;MACjBF,QAAQ,EAAE,CAAC;QAAEG,QAAQ,EAAE,IAAI;QAAEC,OAAO,EAAE,MAAM;QAAEC,OAAO,EAAE;MAAS,CAAC,CAAC;MAClEJ,QAAQ,EAAE,CAAC;QAAEE,QAAQ,EAAE,IAAI;QAAEC,OAAO,EAAE,MAAM;QAAEC,OAAO,EAAE;MAAQ,CAAC;IAClE,CAAC;IAED,MAAMC,OAAO,GAAGd,GAAG,CAAC,KAAK,CAAC;IAC1B,MAAMe,eAAe,GAAGf,GAAG,CAAC,KAAK,CAAC;IAClC,MAAMgB,YAAY,GAAGhB,GAAG,CAAC,IAAI,CAAC;IAE9B,MAAMiB,WAAW,GAAGA,CAAA,KAAM;MACxBD,YAAY,CAACE,KAAK,CAACC,QAAQ,CAACC,KAAK,IAAI;QACnC,IAAIA,KAAK,EAAE;UACTN,OAAO,CAACI,KAAK,GAAG,IAAI;UACpBb,KAAK,CACFgB,QAAQ,CAAC,YAAY,EAAEd,SAAS,CAAC,CACjCe,IAAI,CAAC,MAAM;YACVhB,MAAM,CAACiB,IAAI,CAAC;cAAEC,IAAI,EAAE;YAAI,CAAC,CAAC;YAC1BpB,SAAS,CAAC;cACRS,OAAO,EAAE,MAAM;cACfY,IAAI,EAAE;YACR,CAAC,CAAC;UACJ,CAAC,CAAC,CACDC,KAAK,CAACC,KAAK,IAAI;YACdvB,SAAS,CAACuB,KAAK,CAACA,KAAK,CAACd,OAAO,IAAI,MAAM,CAAC;UAC1C,CAAC,CAAC,CACDe,OAAO,CAAC,MAAM;YACbd,OAAO,CAACI,KAAK,GAAG,KAAK;UACvB,CAAC,CAAC;QACN;MACF,CAAC,CAAC;IACJ,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}